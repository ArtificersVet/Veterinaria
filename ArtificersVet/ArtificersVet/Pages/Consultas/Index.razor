@page "/Consultas/index"
@using ArtificersVet.Models
@using ArtificersVet.Data
@using Microsoft.EntityFrameworkCore
@inject NavigationManager NavigationManager
@inject VeterinariaDbContext dbContext
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime

 <div class="container">
    @* <div class="navbar">
        <a href="/">Inicio</a>
        <a href="/empleados">Empleados</a>
        <a href="/clientes">Clientes</a>
        <a href="/mascotas">Mascotas</a>
        <a href="/consultas">Consultas</a>
    </div> *@

    <div class="content">
        <h3>Consultas</h3>

        <EditForm Model="@this" OnValidSubmit="BuscarConsultasPorFecha">
        <button class="btn-create" @onclick="AddConsulta">Nueva Consulta</button>

            <div class="actions">
                <label>Fecha de la Consulta</label>
                <div class="input-group">
                    <InputDate id="fechaBusqueda" @bind-Value="fechaBusqueda" class="form-control" />
                    <button class="btn-search" type="submit">Buscar</button><br />
                </div>
            </div>
        </EditForm>

        @if (consultas == null)
        {
            <p><em>Cargando...</em></p>
        }
        else
        {
            <h3>Listado de Consultas</h3>
            
            <table class="consultas-table">
                <thead>
                    <tr>
                        <th>Cliente</th>
                        <th>Mascota</th>
                        <th>Fecha</th>
                        <th>Motivo</th>
                        <th>Diagnostico</th>
                        <th>Tratamiento</th>
                        <th>Monto</th>
                        <th>Empleado</th>
                        <th>Acciones</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var consulta in consultas)
                    {
                        <tr>
                            <td>@consulta.Cliente?.Nombre</td>
                            <td>@consulta.Mascota?.Nombre</td>
                            <td>@consulta.FechaConsulta?.ToString("dd/MM/yyyy")</td>
                            <td>@consulta.Motivo</td>
                            <td>@consulta.Diagnostico</td>
                            <td>@consulta.Tratamiento</td>
                            <td>@consulta.Monto?.ToString("C")</td>
                            <td>@consulta.Empleado?.Nombre</td>
                            <td>
                                <button class="btn-edit" @onclick="() => EditConsulta(consulta.Id)">Modificar</button>
                                <button class="btn-view" @onclick="() => ViewConsulta(consulta.Id)">Ver</button>
                                <button class="btn-delete" @onclick="() => DeleteConsulta(consulta.Id)">Eliminar</button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
</div>
    </div>


<style>
    .container {
        background-color: #FFFFAE;
        padding: 20px;
        border-radius: 10px;
        font-family: Arial, sans-serif;
    }

    .navbar {
        background-color: #ffdd99;
        padding: 10px;
        border-radius: 10px;
        margin-bottom: 20px;
    }

        .navbar a {
            margin-right: 15px;
            color: black;
            text-decoration: none;
            font-weight: bold;
        }

    .content h3 {
        text-align: center;
    }

    .actions {
        text-align: center;
        margin-bottom: 20px;
    }

    .input-group {
        display: flex;
        align-items: center;
        justify-content: center;
    }

    #fechaBusqueda {
        width: 125px;
        margin-right: 10px; /* Espacio entre el input y el botón */
        border-radius: 4%;
    }

    .btn-search {
        background-color: green;
        color: white;
        padding: 10px;
        border: none;
        border-radius: 10px;
        cursor: pointer;
    }

    .consultas-table {
        width: 100%;
        border-collapse: collapse;
        text-align: left;
    }

        .consultas-table th, .consultas-table td {
            padding: 10px;
            border: 1px solid #ddd;
        }

        .consultas-table th {
            background-color: #ffcc66;
        }

    .btn-create {
        background-color: black;
        color: white;
        padding: 10px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
    }

    .btn-edit {
        background-color: blue;
        color: white;
        padding: 5px 10px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
    }

    .btn-view {
        background-color: yellow;
        padding: 5px 10px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
    }

    .btn-delete {
        background-color: red;
        color: white;
        padding: 5px 10px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
    }
</style>

@code {
    private List<Consulta> consultas;
    private DateTime? fechaBusqueda = null;

    protected override async Task OnInitializedAsync()
    {
        consultas = await dbContext.Consultas
            .Include(c => c.Cliente)
            .Include(c => c.Empleado)
            .Include(c => c.Mascota)
            .ToListAsync();
    }

    private async Task BuscarConsultasPorFecha()
    {
        if (fechaBusqueda.HasValue)
        {
            consultas = await dbContext.Consultas
                .Include(c => c.Cliente)
                .Include(c => c.Empleado)
                .Include(c => c.Mascota)
                .Where(c => c.FechaConsulta.HasValue && c.FechaConsulta.Value.Date == fechaBusqueda.Value.Date)
                .ToListAsync();
        }
        else
        {
            // Si no se proporciona una fecha, carga todas las consultas
            await OnInitializedAsync();
        }
    }

    private void AddConsulta()
    {
        NavigationManager.NavigateTo("/consultas/create");
    }

    private void EditConsulta(int id)
    {
        NavigationManager.NavigateTo($"/consultas/edit/{id}");
    }

    private void ViewConsulta(int id)
    {
        NavigationManager.NavigateTo($"/consultas/ver/{id}");
    }

    private async Task DeleteConsulta(int id)
    {
        var consulta = await dbContext.Consultas.FindAsync(id);
        if (consulta != null && await JSRuntime.InvokeAsync<bool>("confirm", new object?[] { $"¿Estás seguro de eliminar la consulta {consulta.Id}?" }))
        {
            dbContext.Consultas.Remove(consulta);
            await dbContext.SaveChangesAsync();
            consultas = await dbContext.Consultas
                .Include(c => c.Cliente)
                .Include(c => c.Mascota)
                .Include(c => c.Empleado)
                .ToListAsync(); // Recarga la lista después de eliminar
        }
    }
}
