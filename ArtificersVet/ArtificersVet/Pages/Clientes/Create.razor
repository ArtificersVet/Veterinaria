@page "/clientes/create"
@using ArtificersVet.Data
@using ArtificersVet.Models
@using Microsoft.EntityFrameworkCore
@inject VeterinariaDbContext dbContext
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime

<center><h3>Crear Cliente</h3></center>

<EditForm Model="@cliente" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />

    <div class="form-container">
        <div class="form-group">
            <label for="nombre">Nombre:</label>
            <InputText id="nombre" @bind-Value="cliente.Nombre" class="form-control" />
            <ValidationMessage For="@(() => cliente.Nombre)" />
        </div>

        <div class="form-group">
            <label for="apellido">Apellido:</label>
            <InputText id="apellido" @bind-Value="cliente.Apellido" class="form-control" />
            <ValidationMessage For="@(() => cliente.Apellido)" />
        </div>

        <div class="form-group">
            <label for="email">Email:</label>
            <InputText id="email" @bind-Value="cliente.Email" class="form-control" />
            <ValidationMessage For="@(() => cliente.Email)" />
        </div>

        <div class="form-group">
            <label for="telefono">Teléfono:</label>
            <InputText id="telefono" @bind-Value="cliente.Telefono" class="form-control" />
            <ValidationMessage For="@(() => cliente.Telefono)" />
        </div>

        <div class="form-group">
            <label for="direccion">Dirección:</label>
            <InputText id="direccion" @bind-Value="cliente.Direccion" class="form-control" />
            <ValidationMessage For="@(() => cliente.Direccion)" />
        </div>
    </div>
    <br />
    <div>
        <button type="submit" class="btn btn-primary btn-guardar">Guardar</button>
        <button type="button" class="btn btn-secondary btn-cancelar" @onclick="Cancelar">Cancelar</button>
    </div>
</EditForm>

<style>
    body {
        background-color: #FFFACD;
    }

    .form-container {
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        gap: 20px;
        padding: 20px;
    }

    .btn-guardar {
        background-color: black;
        color: white;
    }

    .btn-cancelar {
        background-color: #FFD700; /* Amarillo fuerte */
        color: black;
    }

    .form-group {
        display: flex;
        flex-direction: column;
    }
</style>

@code {
    private Cliente1 cliente = new Cliente1();

    /// <summary>
    /// Maneja el envío válido del formulario, crea una nueva consulta en la bd.
    /// muestra una alerta al usuario y redirige a la página principal de clientes.
    /// </summary>
    private async Task HandleValidSubmit()
    {
        dbContext.Clientes1.Add(cliente);
        await dbContext.SaveChangesAsync();
        await JSRuntime.InvokeVoidAsync("alert", "El cliente se creó correctamente");
        NavigationManager.NavigateTo("/clientes/index");
    }


    /// <summary>
    /// Cancela la creación y redirige a la página principal de clientes.
    /// </summary>
    private void Cancelar()
    {
        NavigationManager.NavigateTo("/clientes/index");
    }
}
